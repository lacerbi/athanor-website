"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[114],{3205:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"tutorial/example-workflows","title":"Example Workflows","description":"Learn how to apply Athanor\'s features in real-world scenarios with these step-by-step workflow examples, from simple feature additions to complex system integrations.","source":"@site/docs/tutorial/08-example-workflows.md","sourceDirName":"tutorial","slug":"/tutorial/example-workflows","permalink":"/docs/tutorial/example-workflows","draft":false,"unlisted":false,"editUrl":"https://github.com/lacerbi/athanor-website/edit/main/docs/tutorial/08-example-workflows.md","tags":[],"version":"current","sidebarPosition":9,"frontMatter":{"id":"example-workflows","title":"Example Workflows","sidebar_position":9},"sidebar":"tutorialSidebar","previous":{"title":"Customizing Prompts and Tasks","permalink":"/docs/tutorial/customizing-templates"}}');var t=s(4848),r=s(8453);const l={id:"example-workflows",title:"Example Workflows",sidebar_position:9},o="8. Example Workflows",c={},a=[{value:"Simple Feature: Dark Mode Toggle",id:"simple-feature-dark-mode-toggle",level:2},{value:"Step 1: Define the Task",id:"step-1-define-the-task",level:3},{value:"Step 2: Smart File Selection",id:"step-2-smart-file-selection",level:3},{value:"Step 3: Implement the Feature",id:"step-3-implement-the-feature",level:3},{value:"Step 4: Apply Changes",id:"step-4-apply-changes",level:3},{value:"Expected Outcome",id:"expected-outcome",level:3},{value:"Complex Feature: Stripe Payment Integration",id:"complex-feature-stripe-payment-integration",level:2},{value:"Phase 1: Architecture Planning",id:"phase-1-architecture-planning",level:3},{value:"Step 1: Get the Architecture Plan",id:"step-1-get-the-architecture-plan",level:4},{value:"Step 2: Copy Architecture to Context",id:"step-2-copy-architecture-to-context",level:4},{value:"Phase 2: Implementation (Commit by Commit)",id:"phase-2-implementation-commit-by-commit",level:3},{value:"Commit 1: Setup Stripe SDK",id:"commit-1-setup-stripe-sdk",level:4},{value:"Commit 2: Subscription Plans",id:"commit-2-subscription-plans",level:4},{value:"Continue Pattern for Remaining Commits",id:"continue-pattern-for-remaining-commits",level:4},{value:"Phase 3: Integration Testing",id:"phase-3-integration-testing",level:3},{value:"Understanding Existing Code: Authentication Flow",id:"understanding-existing-code-authentication-flow",level:2},{value:"Step 1: Broad Overview",id:"step-1-broad-overview",level:3},{value:"Process:",id:"process",level:4},{value:"Step 2: Deep Dive into Specific Components",id:"step-2-deep-dive-into-specific-components",level:3},{value:"Process:",id:"process-1",level:4},{value:"Step 3: Document Your Understanding",id:"step-3-document-your-understanding",level:3},{value:"Process:",id:"process-2",level:4},{value:"Best Practices for Workflow Success",id:"best-practices-for-workflow-success",level:2},{value:"Planning Phase",id:"planning-phase",level:3},{value:"Implementation Phase",id:"implementation-phase",level:3},{value:"Quality Assurance",id:"quality-assurance",level:3},{value:"Team Collaboration",id:"team-collaboration",level:3},{value:"Troubleshooting Common Workflow Issues",id:"troubleshooting-common-workflow-issues",level:2},{value:"AI Responses Don&#39;t Match Expectations",id:"ai-responses-dont-match-expectations",level:3},{value:"Changes Don&#39;t Apply Cleanly",id:"changes-dont-apply-cleanly",level:3},{value:"Workflow Takes Too Long",id:"workflow-takes-too-long",level:3},{value:"Results Lack Project Context",id:"results-lack-project-context",level:3}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"8-example-workflows",children:"8. Example Workflows"})}),"\n",(0,t.jsx)(n.p,{children:"Learn how to apply Athanor's features in real-world scenarios with these step-by-step workflow examples, from simple feature additions to complex system integrations."}),"\n",(0,t.jsx)(n.h2,{id:"simple-feature-dark-mode-toggle",children:"Simple Feature: Dark Mode Toggle"}),"\n",(0,t.jsx)(n.p,{children:"Let's implement a dark mode toggle for a web application."}),"\n",(0,t.jsx)(n.h3,{id:"step-1-define-the-task",children:"Step 1: Define the Task"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Task Description"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Implement a dark mode toggle switch in the settings panel that saves the user's preference to localStorage and applies the theme immediately.\n"})}),"\n",(0,t.jsx)(n.h3,{id:"step-2-smart-file-selection",children:"Step 2: Smart File Selection"}),"\n",(0,t.jsx)(n.p,{children:"Instead of manually selecting files, let's use Athanor's intelligence:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Don't select any files initially"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Autoselect"'})," prompt template"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy"})," the generated prompt to your AI assistant"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Paste response"})," back into Athanor"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Apply AI Output"'})," to auto-select relevant files"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The AI might suggest files like:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"components/SettingsPanel.tsx"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"hooks/useTheme.ts"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"styles/globals.css"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"contexts/ThemeContext.tsx"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-3-implement-the-feature",children:"Step 3: Implement the Feature"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review"})," the auto-selected files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Coder"'})," prompt template"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy"})," prompt to AI assistant"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Receive"})," implementation with proper React hooks, CSS variables, and localStorage persistence"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-4-apply-changes",children:"Step 4: Apply Changes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy"})," AI response"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:'Click "Apply AI Output"'})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review"})," each proposed change in the diff viewer"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Accept"})," changes that look correct"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reject"})," any unwanted modifications"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"expected-outcome",children:"Expected Outcome"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"New theme toggle component"}),"\n",(0,t.jsx)(n.li,{children:"Hook for theme management"}),"\n",(0,t.jsx)(n.li,{children:"CSS variables for dark/light modes"}),"\n",(0,t.jsx)(n.li,{children:"Persistent user preferences"}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"complex-feature-stripe-payment-integration",children:"Complex Feature: Stripe Payment Integration"}),"\n",(0,t.jsx)(n.p,{children:"Let's integrate Stripe for handling monthly user subscriptions with a multi-commit approach."}),"\n",(0,t.jsx)(n.h3,{id:"phase-1-architecture-planning",children:"Phase 1: Architecture Planning"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Task Description"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Integrate Stripe for handling monthly user subscriptions. This should include:\r\n- Creating subscription plans\r\n- Handling webhooks for payment success/failure\r\n- Updating user subscription status\r\n- Managing billing portal access\r\n- Error handling and user feedback\n"})}),"\n",(0,t.jsx)(n.h4,{id:"step-1-get-the-architecture-plan",children:"Step 1: Get the Architecture Plan"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Autoselect"'})," to identify relevant files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apply AI Output"})," to select suggested files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Architect"'})," prompt template"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy"})," to AI assistant for strategic planning"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The AI will provide a commit-by-commit breakdown:"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Commit 1"}),": Setup Stripe SDK and API keys\r\n",(0,t.jsx)(n.strong,{children:"Commit 2"}),": Implement subscription plan management\r\n",(0,t.jsx)(n.strong,{children:"Commit 3"}),": Create checkout session handling\r\n",(0,t.jsx)(n.strong,{children:"Commit 4"}),": Implement webhook endpoint\r\n",(0,t.jsx)(n.strong,{children:"Commit 5"}),": Build user billing portal\r\n",(0,t.jsx)(n.strong,{children:"Commit 6"}),": Add error handling and UI feedback"]}),"\n",(0,t.jsx)(n.h4,{id:"step-2-copy-architecture-to-context",children:"Step 2: Copy Architecture to Context"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Copy"})," the AI's architecture response"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Paste"})," the commit plan into the ",(0,t.jsx)(n.strong,{children:"Context"})," field"]}),"\n",(0,t.jsx)(n.li,{children:"This will be included in subsequent prompts"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-2-implementation-commit-by-commit",children:"Phase 2: Implementation (Commit by Commit)"}),"\n",(0,t.jsx)(n.h4,{id:"commit-1-setup-stripe-sdk",children:"Commit 1: Setup Stripe SDK"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Select "Commit 1" from Task Context'}),":","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Implement Commit 1: Setup Stripe SDK and API keys.\r\nConfigure environment variables and initialize Stripe client.\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use existing file selection"})," (you rarely need to rerun Autoselect)"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Coder"'})," prompt"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apply changes"})," after review"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"commit-2-subscription-plans",children:"Commit 2: Subscription Plans"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Either:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Continue"}),' in your current AI chat by telling the AI "Continue with Commit 2"; ',(0,t.jsx)(n.strong,{children:"or"})]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Select "Commit 2" from Task Context'}),', click "Coder prompt" and paste in a new chat']}),"\n",(0,t.jsx)(n.li,{children:"This choice depends on the complexity and length of the current chat"}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review and apply"})," changes"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"continue-pattern-for-remaining-commits",children:"Continue Pattern for Remaining Commits"}),"\n",(0,t.jsx)(n.p,{children:"Repeat the process for each commit:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Update task context with current commit (or continue in the chat)"}),"\n",(0,t.jsx)(n.li,{children:'Use "Coder" prompt for implementation'}),"\n",(0,t.jsx)(n.li,{children:"Apply and test changes"}),"\n",(0,t.jsx)(n.li,{children:"Move to next commit"}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"phase-3-integration-testing",children:"Phase 3: Integration Testing"}),"\n",(0,t.jsx)(n.p,{children:"After completing all commits:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Task Description"}),":","\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Review the complete Stripe integration implementation and provide:\r\n- Integration testing checklist\r\n- Potential security considerations\r\n- Performance optimization opportunities\r\n- Error scenarios to test\n"})}),"\n"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Select all modified files"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Use "Query"'})," prompt for analysis"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Follow AI recommendations"})," for testing"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"understanding-existing-code-authentication-flow",children:"Understanding Existing Code: Authentication Flow"}),"\n",(0,t.jsx)(n.p,{children:"Learn how to use Athanor to understand unfamiliar codebases."}),"\n",(0,t.jsx)(n.h3,{id:"step-1-broad-overview",children:"Step 1: Broad Overview"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Task Description"}),":"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Explain the current user authentication flow, including:\r\n- Token generation and validation\r\n- Session management\r\n- Role-based access control\r\n- Security measures implemented\r\n- Which files are primarily involved?\n"})}),"\n",(0,t.jsx)(n.h4,{id:"process",children:"Process:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Autoselect"'})," to find auth-related files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apply AI Output"})," to select suggested files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Click "Query"'})," prompt for analysis-focused output"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review"})," AI's explanation of the authentication system"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-2-deep-dive-into-specific-components",children:"Step 2: Deep Dive into Specific Components"}),"\n",(0,t.jsx)(n.p,{children:"Based on the AI's overview, dive deeper on the JWT token validation middleware."}),"\n",(0,t.jsx)(n.h4,{id:"process-1",children:"Process:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Select"})," specific middleware files identified in Step 1"]}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.strong,{children:"copy"})," action from the File Manager to copy just these files in the existing chat"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ask follow-up questions"})," in the same AI chat"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"step-3-document-your-understanding",children:"Step 3: Document Your Understanding"}),"\n",(0,t.jsx)(n.h4,{id:"process-2",children:"Process:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ask the AI for a Summary"})," of your chat"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Paste"})," the summary into the Task Description"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Autoselect"})," all authentication-related files"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:'Use "Writer"'})," prompt for documentation generation"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Apply changes"})," to create/update documentation files"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"best-practices-for-workflow-success",children:"Best Practices for Workflow Success"}),"\n",(0,t.jsx)(n.h3,{id:"planning-phase",children:"Planning Phase"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Start with Autoselect"})," when unsure about file selection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Architect"})," for complex features requiring multiple steps"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Break large tasks"})," into smaller, manageable commits"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document your plan"})," in the Context field"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"implementation-phase",children:"Implementation Phase"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review AI suggestions"})," carefully before applying"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Test incrementally"})," after each commit"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use version control"})," to track changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Ask follow-up questions"})," when AI responses are unclear"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Stay in the chat"})," if the context is still relevant"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"quality-assurance",children:"Quality Assurance"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use Query prompts"})," to verify understanding"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generate tests"})," for critical functionality"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review security implications"})," of changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document"})," important decisions and changes"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"team-collaboration",children:"Team Collaboration"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Share custom templates"})," that work well for your team"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use consistent commit messages"})," when applying changes"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Document workflows"})," that prove effective"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Train team members"})," on successful patterns"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"troubleshooting-common-workflow-issues",children:"Troubleshooting Common Workflow Issues"}),"\n",(0,t.jsx)(n.h3,{id:"ai-responses-dont-match-expectations",children:"AI Responses Don't Match Expectations"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Refine task descriptions"})," with more specific requirements"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add relevant context"})," about coding standards or patterns"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Include examples"})," of desired output format"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Break complex requests"})," into smaller parts"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"changes-dont-apply-cleanly",children:"Changes Don't Apply Cleanly"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Check that files haven't changed"})," since generating the prompt"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Regenerate prompts"})," with current file state"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Review merge conflicts"})," carefully"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Apply changes in smaller batches"})}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"workflow-takes-too-long",children:"Workflow Takes Too Long"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Use preset tasks"})," for common operations"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Create custom templates"})," for repeated workflows"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Leverage API integration"})," for simple requests"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Batch similar operations"})," together"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"results-lack-project-context",children:"Results Lack Project Context"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:["Include ",(0,t.jsx)(n.code,{children:"PROJECT.md"})," or documentation"]})," files in selection"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Add project-specific requirements"})," to task descriptions"]}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Use project-specific custom templates"})}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Provide architectural context"})," in prompts"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Ready to master Athanor? Practice these workflows with your own projects and experiment with creating custom templates that match your team's specific needs!"})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var i=s(6540);const t={},r=i.createContext(t);function l(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);